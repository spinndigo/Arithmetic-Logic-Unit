// Joseph Spinosa
// project pt. 2 RCA

module RCA;

reg c_in;
reg[7:0] a,b;
wire[7:0] sum;
wire c_out;
wire[7:0] FA_out;

fulladd FA0  (a[0], b[0], c_in, sum[0], FA_out[0]);
fulladd FA1  (a[1], b[1], FA_out[0], sum[1], FA_out[1]);
fulladd FA2  (a[2], b[2], FA_out[1], sum[2], FA_out[2]);
fulladd FA3  (a[3], b[3], FA_out[2], sum[3], FA_out[3]);
fulladd FA4  (a[4], b[4],FA_out[3] , sum[4], FA_out[4]);
fulladd FA5  (a[5], b[5], FA_out[4], sum[5], FA_out[5]);
fulladd FA6  (a[6], b[6], FA_out[5], sum[6], FA_out[6]);
fulladd FA7  (a[7], b[7], FA_out[6], sum[7], c_out);

initial
   begin
     $monitor($time,,"a=%b, b=%b, c_in=%b, c_out=%b, sum=%b", a,b,c_in,c_out,sum);

  #10 a=8'b01111111; b=8'b00000000; c_in=0;
  #10 a=8'b01111111; b=8'b00000000; c_in=1;
  #10 a=8'b00001110; b=8'b00000011; c_in=0;
  #10 a=8'b01111111; b=8'b00000001; c_in=0;
  #10 a=8'b00000010; b=8'b00000101; c_in=0;
  #10 a=8'b11111110; b=8'b00000101; c_in=0;
  #10 $finish;
   end
endmodule

module fulladd(a,b,c_in,sum,c_out);
  output sum;
  output c_out;
  input a;
  input b;
  input c_in;

  assign sum = (a & ~b & ~c_in) | (~a & ~b & c_in) |
    (a & b & c_in) | (~a & b & ~c_in);

  assign c_out = (a & c_in) | (a & b) | (b & c_in);

endmodule 
